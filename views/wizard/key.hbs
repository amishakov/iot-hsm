<script>
    var slots = {{{slotstring}}}
    console.log(slots);
    console.log({{serial}});
    var serial = {{serial}};
    var slotindex;

    function listAvailableSlots() {
        let slots = ['01', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '20'];

        let select = document.getElementById('slotid');
        for(let i = 0; i <= slots.length - 1; i++) {
            if(checkSlotAvailability(slots[i])) {
                var option = document.createElement("option");
                option.text = slots[i];
                option.value = slots[i];
                select.add(option);
            }
        }
    }

    function checkSlotAvailability(slotid) {
        let objects = slots.slots[slotindex].objects
        let keys = Object.keys(objects);
        for(let i = 0; i <= keys.length - 1; i++) {
            if(keys[i] == slotid) {
                return false;
            }
        }
        return true;
    }

    function changeKeyMethod() {
        let select = document.getElementById('keymethod');
        let submitbtn = document.getElementById('submitbtn');
        let keymethod = select.options[select.selectedIndex].value
        if(keymethod=='generate') {
            submitbtn.value = 'Generate Private Key';
        } else {
            submitbtn.value = 'Import Private Key';
            //popup modal to enter private key
            //handle form submission
        }
    }

    function getSlotIndex() {
        for(let i = 0; i <= slots.slots.length - 1; i++) {
            if(slots.slots[i]['serial num']==serial) {
                return i;
            }
        }
        return -1;
    }

    window.onload = function() {
        let index = getSlotIndex();
        if(index >= 0) {
            slotindex = index;
            listAvailableSlots();
        } else {
            alert('Invalid HSM serial number ' + serial);
        }
    }
</script>
<div style="margin-top: 20px;" class="container">
    <div class="row">
        <div class="col-2"></div>
        <div class="col-8 mx-auto">
            <div class="shadow-lg card" style="width: 100%;">
                <!--<img class="card-img-top" alt="{{this.[token model]}}">-->
                <h3 class="pt-4 text-center card-title">Prepare Your Private Key</h3>
                <div class="card-body">
                    <div class="form-group">
                        <label for="slotid">Choose an available slot:</label>
                        <select class="form-control" id="slotid" name="slotid">
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="slotid">Choose key option:</label>
                        <select onchange="changeKeyMethod()" class="form-control" id="keymethod" name="keymethod" aria-describedby="keymethodhelp">
                            <option value="generate">Generate</option>
                            <option value="import">Import</option>
                        </select>
                        <small id="keymethodhelp" class="form-text text-muted">*Note: The generate option is very secure and generates the key within the HSM, but it can be difficult to backup depending on your HSM. The import option can be used to import an existing private key. Extra care must be taken to ensure the key cannot be compromised.</small>
                    </div>
                    <div class="text-center form-group">
                        <input id="submitbtn" type="submit" class="text-center btn btn-primary" value="Generate Private Key" />
                    </div>
                </div>
            </div>
        </div>
        <div class="col-2"></div>
    </div>
</div>