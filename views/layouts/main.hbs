<!DOCTYPE html>
<html>
  <head>
    <title>{{title}}</title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="/javascripts/ajax.js"></script>
    <script src="/js/jquery/jquery.min.js"></script>
    <script src="/js/bootstrap/bootstrap.bundle.min.js"></script>
    <link href="/css/bootstrap/bootstrap.min.css" rel="stylesheet">
    <script>
      var iot = {{{iotstring}}}
      //console.log(iot);
      function checkSoftHSM2() {
        for(let i = 0; i <= slots.slots.length - 1; i++) {
          if(slots.slots[i].name.indexOf('SoftHSM') >= 0) {
            if(slots.slots[i].hasOwnProperty('token state')) {
              
            } else {
              document.getElementById('createsofthsm2').style.display = 'none';
              return;
            }
          }
        }
      }

      function checkStatus() {
        let getslots = {{{slotstring}}};
        if(getslots.state=='initializing') {
          $('#overlay').fadeIn();
          waitForSlots(function(err, resp) {
              $('#overlay').fadeOut();
              if(err) {
                  alert(err);
              } else {
                  //console.log(resp.data);
                  slots = resp.data;
                  init();
              }
          });
        } else {
          init();
        }
      }

      function waitForSlots(callback) {
        getAPIRequest('/api/pkcs11/slotstatus', function(err, resp) {
            if(err) {
                callback(resp.message, resp);
                //console.log(response);
            } else {
                //$('#overlay').fadeOut();
                if(resp.data.state == 'initializing') {
                    setTimeout(function() {
                        waitForSlots(callback);
                    }, 1000);
                } else {
                    callback(false, resp);
                }
            }
        });
    }

    function reload(manual) {
      if(manual) {
        var r = confirm("Are you sure you want to reload? This will interrupt all signing operations while certificates on the HSMs are processed.");
        if (r == true) {
          //continue
        } else {
          return false;
        }
      }
      $('#overlay').fadeIn();
      getAPIRequest('/api/reload', function(err, resp) {
        if(err) {
            alert(resp.message)
            //console.log(response);
        } else {
            location.reload(true);
        }
      });
    }

    function createHSM() {
      /*let labelelem = document.getElementById('createSoftHSM2SlotInputLabel');
      let sopinelem = document.getElementById('createSoftHSM2SlotInputSOPin');
      let pinelem = document.getElementById('createSoftHSM2SlotInputPin');

      let sopin;
      let pin;
      if(sopinelem.readOnly) {
        sopin = false;
      } else {
        sopin = sopinelem.value;
      }

      if(pinelem.readOnly) {
        pin = false;
      } else {
        pin = pinelem.value;
      }*/

      let sopin = false;
      let pin = false;
      let label = 'SoftHSM2';

      $('#overlay').fadeIn();
      postRequest('/api/softhsm2/create', {
          label: label,
          sopin: sopin,
          pin: pin
          }, function(err, resp) {
          if(err) {
              $('#overlay').fadeOut();
              alert(resp.message);
              //console.log(response);
          } else {
              waitForSlots(function(err, resp) {
                  $('#overlay').fadeOut();
                  if(err) {
                      alert(err);
                  } else {
                      //console.log(resp);
                      location.reload();
                  }
              });
          }
      });
    }

    function createHSMModal() {
        //$('#createSoftHSM2SlotModal').modal('show');
        var r = confirm("Are you sure you want to create a new SoftHSM2 slot?");
        if (r == true) {
          createHSM();
        }
    }

    function changeDefault(elem, type) {
      console.log(type);
      if(type == 'sopin') {
        elem.value = '010203040506070801020304050607080102030405060708';
      } else {
        elem.value = '123456';
      }
      elem.type = 'password';
      elem.readOnly = false;
      setTimeout(function() {
        elem.select();
      }, 100 );
      elem.onclick = false;
    }
    </script>
  </head>
  <body>
    <header>
      <!-- Fixed navbar -->
      <nav class="navbar navbar-expand-md navbar-dark fixed-top bg-dark">
      <a class="navbar-brand" href="/">IoT-HSM</a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarCollapse" aria-controls="navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarCollapse">
          <ul class="navbar-nav mr-auto">
              <li id="createsofthsm2" class="nav-item active">
                  <a class="nav-link" href="javascript: createHSMModal();">Create SoftHSM2</a>
              </li>
              <!--<li class="nav-item active">
                  <a class="nav-link" href="/about-us">Update PINs</a>
              </li>-->
              <li class="nav-item active">
                  <a class="nav-link" href="javascript: reload(true);">Reload</a>
              </li>
          </ul>
          <span style="color: white;">Connected Slots: {{iot.connected}}</span>
      </div>
      </nav>
    </header>
    {{{body}}}
    <div id="overlay" style="display:none;">
      <div class="spinner"></div>
        <br/>
        Processing...
    </div>
    <!--<div class="modal fade" id="createSoftHSM2SlotModal" tabindex="-1" role="dialog" aria-labelledby="createSoftHSM2SlotModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createSoftHSM2SlotModalLabel">Create a SoftHSM2 Slot</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form onsubmit="createHSM(); return false;">
                <div class="modal-body">
                  <div class="form-group">
                      <label for="createSoftHSM2SlotInputLabel">Label</label>
                      <input type="text" class="form-control" id="createSoftHSM2SlotInputLabel" name="createSoftHSM2SlotInputLabel" aria-describedby="createSoftHSM2SlotInputHelp" placeholder="SoftHSM2 Label Name">
                      <small id="createSoftHSM2SlotInputHelp" class="form-text text-muted">Enter a friendly name for your SoftHSM2 Slot</small>
                  </div>
                  <div class="form-group">
                      <label for="createSoftHSM2SlotInputSOPin">SO PIN</label>
                      <input onclick="changeDefault(this, 'sopin');" type="text" class="form-control" id="createSoftHSM2SlotInputSOPin" name="createSoftHSM2SlotInputSOPin" readonly aria-describedby="createSoftHSM2SlotInputSOPinHelp" value="(Click to change default)">
                      <small id="createSoftHSM2SlotInputSOPinHelp" class="form-text text-muted">Enter the security officer PIN</small>
                  </div>
                  <div class="form-group">
                      <label for="createSoftHSM2SlotInputPin">User PIN</label>
                      <input onclick="changeDefault(this, 'userpin');" type="text" class="form-control" id="createSoftHSM2SlotInputPin" name="createSoftHSM2SlotInputPin" readonly aria-describedby="createSoftHSM2SlotInputPinHelp" value="(Click to change default)" placeholder="">
                      <small id="createSoftHSM2SlotInputPinHelp" class="form-text text-muted">Enter the user PIN</small>
                  </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <input type="submit" class="btn btn-primary" value="Create SoftHSM2" />
                </div>
            </form>
            </div>
        </div>
    </div>-->
  </body>
</html>
